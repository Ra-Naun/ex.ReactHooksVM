[{"C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\index.js":"1","C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\App.js":"2","C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useState\\main.js":"3","C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useEffect\\main.js":"4","C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useRef\\main.js":"5","C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useMemo\\main.js":"6","C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useCallback\\main.js":"7","C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useCallback\\itemsList.js":"8"},{"size":229,"mtime":1607583016320,"results":"9","hashOfConfig":"10"},{"size":928,"mtime":1607608719108,"results":"11","hashOfConfig":"10"},{"size":1241,"mtime":1607606339088,"results":"12","hashOfConfig":"10"},{"size":2250,"mtime":1607610613591,"results":"13","hashOfConfig":"10"},{"size":1258,"mtime":1607606263371,"results":"14","hashOfConfig":"10"},{"size":1395,"mtime":1607610116885,"results":"15","hashOfConfig":"10"},{"size":1505,"mtime":1607610924209,"results":"16","hashOfConfig":"10"},{"size":404,"mtime":1607609880063,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1bk1se9",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\index.js",[],["36","37"],"C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\App.js",[],"C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useState\\main.js",[],"C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useEffect\\main.js",[],"C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useRef\\main.js",[],"C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useMemo\\main.js",["38"],"import React, { useState, useMemo, useEffect } from \"react\";\r\n\r\nfunction complexCompute(num) {\r\n    let i = 0;\r\n    while (i < 599999999) i++;\r\n    return num * 42;\r\n}\r\n\r\nfunction HookUseMemo() {\r\n    const [num, setNum] = useState(1);\r\n    const [colored, setColored] = useState(false);\r\n\r\n    const compNum = useMemo(() => {\r\n        return complexCompute(num);\r\n    }, [num]);\r\n\r\n    const styles = useMemo(() => {\r\n        return {\r\n            color: colored ? \"darkred\" : \"black\",\r\n        };\r\n    }, [colored]);\r\n\r\n    useEffect(() => {\r\n        console.log(styles);\r\n    }, [styles]);\r\n\r\n    function increment() {\r\n        setNum((preCount) => preCount + 1);\r\n    }\r\n\r\n    function decrement() {\r\n        setNum((preCount) => preCount - 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h6>useMemo</h6>\r\n            <hr />\r\n\r\n            <button onClick={increment} className=\"btn btn-success el\">\r\n                Increment\r\n            </button>\r\n            <button onClick={decrement} className=\"btn btn-danger el\">\r\n                Decrement\r\n            </button>\r\n            <button onClick={() => setColored((prev) => !prev)} className=\"btn btn-info el\">\r\n                Colored\r\n            </button>\r\n            <h1 className=\"text-center\" style={styles}>\r\n                Счетчик: {num}\r\n            </h1>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HookUseMemo;\r\n","C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useCallback\\main.js",[],"C:\\Users\\Dmitry\\Desktop\\ReactProject\\react-hooks-app\\src\\hooksExamples\\useCallback\\itemsList.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":13,"column":11,"nodeType":"45","messageId":"46","endLine":13,"endColumn":18},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'compNum' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]